@page "/quick-application"
@inject IJSRuntime JS
@using Microsoft.AspNetCore.Components.Forms

<div class="breadcrumb">
   <a href="/">All Aplications</a> <img src="icons/CaretRight.svg" alt="" />
   <span>Quick Application</span>
</div>

<div class="application-container">
   <h1 class="application-title">Quick Application</h1>
   <img src="icons/CitiBankIcon.svg" alt="CitiBankIcon" />
</div>

<div class="splash-container">
   <div class="editor-panel">
      <h2 class="page-heading">Select Items to Collect</h2>

      <div class="card-container">
         <div class="app-card">
            <div class="card-header">
               <span class="drag-icon"><img src="icons/ArrowsOutCardinal.svg" alt=""></span>
               <span><img src="icons/BlueTick.svg" alt=""></span>
            </div>

            <div class="card-body">
               <img src="icons/PropertyIcon.svg" alt="icon" class="card-icon" />
               <h4 class="card-title">Property</h4>
            </div>

            <div class="card-actions">
               <button class="edit-btn"><img src="icons/PencilSimple.svg" alt=""> Edit</button>
               <button class="delete-btn"><img src="icons/TrashSimple.svg" alt=""> Delete</button>
            </div>
         </div>
         <div class="app-card">
            <div class="card-header">
               <span class="drag-icon"><img src="icons/ArrowsOutCardinal.svg" alt=""></span>
               <span><img src="icons/BlueTick.svg" alt=""></span>
            </div>

            <div class="card-body">
               <img src="icons/DollarIcon.svg" alt="icon" class="card-icon" />
               <h4 class="card-title">Income</h4>
            </div>

            <div class="card-actions">
               <button class="edit-btn"><img src="icons/PencilSimple.svg" alt=""> Edit</button>
               <button class="delete-btn"><img src="icons/TrashSimple.svg" alt=""> Delete</button>
            </div>
         </div>
         <div class="app-card">
            <div class="card-header">
               <span class="drag-icon"><img src="icons/ArrowsOutCardinal.svg" alt=""></span>
               <span><img src="icons/BlueTick.svg" alt=""></span>
            </div>

            <div class="card-body">
               <img src="icons/AssetsIcon.svg" alt="icon" class="card-icon" />
               <h4 class="card-title">Assets</h4>
            </div>

            <div class="card-actions">
               <button class="edit-btn"><img src="icons/PencilSimple.svg" alt=""> Edit</button>
               <button class="delete-btn"><img src="icons/TrashSimple.svg" alt=""> Delete</button>
            </div>
         </div>
         <div class="app-card">
            <div class="card-header">
               <span class="drag-icon"><img src="icons/ArrowsOutCardinal.svg" alt=""></span>
               <span><img src="icons/BlueTick.svg" alt=""></span>
            </div>

            <div class="card-body">
               <img src="icons/ReportIcon.svg" alt="icon" class="card-icon" />
               <h4 class="card-title">Credit Report</h4>
            </div>

            <div class="card-actions">
               <button class="edit-btn"><img src="icons/PencilSimple.svg" alt=""> Edit</button>
               <button class="delete-btn"><img src="icons/TrashSimple.svg" alt=""> Delete</button>
            </div>
         </div>
         <div class="app-card">
            <div class="card-header">
               <span class="drag-icon"><img src="icons/ArrowsOutCardinal.svg" alt=""></span>
               <span><img src="icons/BlueTick.svg" alt=""></span>
            </div>

            <div class="card-body">
               <img src="icons/ExpensesIcon.svg" alt="icon" class="card-icon" />
               <h4 class="card-title">Expenses</h4>
            </div>

            <div class="card-actions">
               <button class="edit-btn"><img src="icons/PencilSimple.svg" alt=""> Edit</button>
               <button class="delete-btn"><img src="icons/TrashSimple.svg" alt=""> Delete</button>
            </div>
         </div>
         <div class="app-card" @onclick="OpenModal">
            <div class="card-body">
               <img src="icons/PlusGreyIcon.svg" alt="icon" class="card-icon" />
               <h4 class="card-title">Add New Card</h4>
            </div>


         </div>

      </div>

   </div>

   @if (isModalOpen)
   {
      <div class="modal-overlay">
         <div class="modal-content">
            <h2 class="modal-title">Add a New Card</h2>
            <p class="mb-0">Select Card Type</p>

            <div class="card-type-btn-container">
               <button class="card-type-btn">Pre Defined</button>
               <button class="card-type-btn">Customize</button>
            </div>
            <div class="modal-actions">
               <button class="primary-btn">Add</button>
               <button class="outline-btn" @onclick="CloseModal">Cancel</button>
            </div>
         </div>
      </div>
   }

   <div class="preview-container">
      <h3 class="preview-heading">Preview</h3>

      <div class="preview-panel">
         <div class="device-frame">
            <div class="device-header">
               <button class="back-btn">
                  <img src="icons/WhiteDropdown.svg" alt="Back" />
               </button>
               <span class="header-title">Quick Application</span>
            </div>

            <div class="timeline-horizontal mb-4 show-md-up">
               <div class="tl-step active">
                  <div class="tl-dot active">
                     <div class="tl-inner-dot"></div>
                  </div>
                  <span>Property</span>
               </div>
               <div class="tl-step">
                  <div class="tl-dot">
                     <div class="tl-inner-dot"></div>
                  </div>
                  <span>Income</span>
               </div>
               <div class="tl-step">
                  <div class="tl-dot">
                     <div class="tl-inner-dot"></div>
                  </div>
                  <span>Asset</span>
               </div>
               <div class="tl-step">
                  <div class="tl-dot">
                     <div class="tl-inner-dot"></div>
                  </div>
                  <span>Credit Report</span>
               </div>
               <div class="tl-step">
                  <div class="tl-dot">
                     <div class="tl-inner-dot"></div>
                  </div>
                  <span>Expenses</span>
               </div>
            </div>

            <div class="splash-preview" style="background-color: #f5f7fa">
               @* <p style="color:@TextColorWithOpacity" class="preview-title">Quick Application</p>
               <button class="preview-button @(SelectedButtonStyle == "rounded" ? "rounded-button" : "square-button")"
                  style="background-color:@TextColorWithOpacity; color:white; font-family:@SelectedFontFamily; font-weight:@SelectedFontWeight.ToLower(); font-size:@SelectedFontSize;">Next</button> *@
            </div>
         </div>
      </div>

   </div>


</div>

<div class="action-buttons">
   <button class="secondary-button">Back</button>
   <button class="primary-btn">Next</button>
</div>

@code {
   private bool isModalOpen = false;

   private void OpenModal() => isModalOpen = true;

   private void CloseModal()
   {
      isModalOpen = false;
   }

   private int Hue { get; set; } = 240;
   private int Opacity { get; set; } = 100;
   private int TextHue { get; set; } = 240;
   private int TextOpacity { get; set; } = 100;

   private string SelectedButtonStyle { get; set; } = "rounded";
   private string SelectedFontFamily { get; set; } = "Acumin Pro";
   private string SelectedFontWeight { get; set; } = "Regular";
   private string SelectedFontSize { get; set; } = "24px";

   private string BackgroundColor => HslToHex(Hue, 100, 50);
   private string BackgroundColorWithOpacity =>
   $"{BackgroundColor}{Convert.ToString((int)(Opacity / 100.0 * 255), 16).PadLeft(2, '0')}";

   private string TextColor => HslToHex(TextHue, 100, 50);
   private string TextColorWithOpacity =>
   $"{TextColor}{Convert.ToString((int)(TextOpacity / 100.0 * 255), 16).PadLeft(2, '0')}";



   private string HslToHex(int h, int s, int l)
   {
      double C = (1 - Math.Abs(2 * l / 100.0 - 1)) * (s / 100.0);
      double X = C * (1 - Math.Abs(h / 60.0 % 2 - 1));
      double m = l / 100.0 - C / 2;
      double r = 0, g = 0, b = 0;

      if (h < 60) { r = C; g = X; }
      else if (h < 120) { r = X; g = C; }
      else if (h < 180) { g = C; b = X; }
      else if (h < 240) { g = X; b = C; }
      else if (h < 300) { r = X; b = C; }
      else { r = C; b = X; }

      int R = (int)Math.Round((r + m) * 255);
      int G = (int)Math.Round((g + m) * 255);
      int B = (int)Math.Round((b + m) * 255);

      return $"#{R:X2}{G:X2}{B:X2}";
   }
}


<style>
   .application-container {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 1.5rem;
   }

   .application-title {
      font-size: 24px;
      font-weight: 700;
      color: #141340;
      margin-bottom: 0px;
   }

   .preview-button {
      padding: 10px 20px;
      border: none;
      border-radius: 8px;
      margin-top: 20px;
      cursor: pointer;
   }

   .breadcrumb {
      font-size: 0.875rem;
      color: #1f2937;
      margin-bottom: 1rem;
   }

   .breadcrumb a {
      color: #6b7280;
      text-decoration: none;
      margin-right: 0.25rem;
      font-weight: 500;
   }

   .page-heading {
      color: #141340;
      font-size: 20px;
      font-weight: 700;
      margin: 0px;
   }


   .splash-container {
      display: flex;
      gap: 20px;

      font-family: 'Segoe UI', sans-serif;
      background-color: #F4F7FF;
      border-radius: 32px;
      padding: 20px
   }


   .editor-panel {
      flex: 1 1 auto;
      background: #fff;
      padding: 20px;
      border-radius: 10px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
      display: flex;
      flex-direction: column;
      gap: 15px;
   }

   .editor-panel input[type="file"],
   .editor-panel input[type="color"],
   .editor-panel input[type="range"],
   .editor-panel input[type="text"] {
      padding: 5px;
      font-size: 14px;
   }

   .preview-container {
      padding: 24px;
      background-color: #fff;
      border-radius: 16px;
   }

   .preview-heading {
      font-size: 20px;
      font-weight: 700;
      color: #141340;
      margin-bottom: 16px;
   }

   .preview-panel {
      flex: 1;
      display: flex;
      align-items: center;
      justify-content: center;
   }

   .splash-preview {
      width: 100%;
      height: 600px;
      border-radius: 16px;
      position: relative;
      box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
      display: flex;
      align-items: center;
      justify-content: center;
      flex-direction: column;
      overflow: hidden;
   }

   .splash-preview .logo {
      max-width: 100px;
      max-height: 100px;
      margin-bottom: 20px;
   }

   .splash-preview .title {
      font-size: 24px;
      font-weight: bold;
      color: white;
   }

   .action-buttons {
      display: flex;
      align-items: center;
      justify-content: end;
      gap: 16px;
      margin: 40px 0;
   }

   .primary-btn {
      padding: 0.5rem 1rem;
      background-color: #0047FF;
      color: white;
      border: none;
      border-radius: 0.375rem;
      font-weight: 500;
      cursor: pointer;
   }

   .primary-btn:hover {
      background-color: #003bd1;
   }

   .secondary-button {
      padding: 0.5rem 1rem;
      border-radius: 0.5rem;
      background-color: #EAECF0;
      color: #98A2B3;
      font-weight: 700;
      cursor: pointer;
      border: 0px;
   }

   .bg-color-container {
      width: 100%;
   }

   .bg-color-container>label {
      margin-bottom: 1rem;
      font-size: 16px;
      color: #141340;
      font-weight: 400;
   }

   .color-code-container {
      margin-bottom: 1rem;
   }

   .buttons-heading {
      font-size: 16px;
      color: #141340;
      font-weight: 400;
      margin-bottom: 1rem;
   }

   .button-style-options {
      display: flex;
      gap: 20px;
   }

   .radio-option {
      display: flex;
      align-items: center;
      gap: 8px;
      width: 50%;
   }

   .style-button {
      background-color: #0047FF;
      color: white;
      padding: 4px 12px;
      font-size: 20px;
      border: none;
      cursor: pointer;
      font-weight: 400;
      width: 100%;
   }

   .radio-btn {
      width: 20px;
      height: 20px;
      accent-color: #0047FF;
      cursor: pointer;
   }

   .style-button.rounded-button {
      border-radius: 56px;
   }

   .style-button.square-button {
      border-radius: 8px;
   }

   .font-style-heading {
      font-size: 16px;
      color: #141340;
      font-weight: 400;
      margin-bottom: 1rem;
   }

   .font-style-container {
      display: flex;
      flex-wrap: wrap;
      gap: 24px;
   }

   .font-style-item {
      display: flex;
      flex-direction: column;
      gap: 8px;
      width: 46%;
   }

   .font-style-item label {
      font-size: 16px;
      font-weight: 400;
      color: #585C7B;
   }

   .font-select {
      padding: 8px;
      border: 1px solid #EAECF0;
      border-radius: 10px;
      min-width: 140px;
      outline: none;
      color: #585C7B;
      background-color: white;
      font-size: 14px;
      appearance: none;
      -webkit-appearance: none;
      -moz-appearance: none;
      background-image: url("data:image/svg+xml,%3Csvg fill='none' stroke='%23585C7B' stroke-width='2' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke-linecap='round' stroke-linejoin='round' d='M19 9l-7 7-7-7'%3E%3C/path%3E%3C/svg%3E");
      background-repeat: no-repeat;
      background-position: right 12px center;
      background-size: 16px;
   }

   .font-select option {
      color: #585C7B;
      background-color: white;
   }

   .font-select option:hover {
      color: #fff;
      background-color: #0047FF;
   }

   /* phone‐frame wrapper */
   .device-frame {
      width: 384px;
      background: #fff;
      border-radius: 16px;
      overflow: hidden;
      display: flex;
      flex-direction: column;
      background-color: #0047FF;

   }

   /* blue header bar */
   .device-header {
      display: flex;
      align-items: center;
      padding: 24px 12px;
      gap: 48px;
   }

   .device-header .back-btn {
      background-color: #3360FF;
      border: none;
      padding: 2px;
      width: 24px;
      height: 24px;
      border-radius: 9999px;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
   }

   .device-header .back-btn img {
      rotate: 180deg;
   }

   .device-header .header-title {
      color: white;
      font-size: 16px;
      font-weight: 600;
      text-align: center
   }

   .timeline-horizontal {
      display: flex;
      justify-content: space-between;
      align-items: center;
      position: relative;
      margin-bottom: 2rem;
      gap: 4px;
      padding: 0px 12px;
   }

   .timeline-horizontal::before {
      content: '';
      position: absolute;
      top: 6px;
      left: 10%;
      right: 10%;
      height: 2px;
      background: #d3d3d3;
   }

   .timeline-horizontal::after {
      content: '';
      position: absolute;
      top: 12px;
      left: 6%;
      height: 2px;
      transition: width 0.3s ease;
   }

   .timeline-horizontal[current-step="1"]::after {
      width: 20%;
   }

   .timeline-horizontal[current-step="2"]::after {
      width: 40%;
   }

   .timeline-horizontal[current-step="3"]::after {
      width: 60%;
   }

   .timeline-horizontal[current-step="4"]::after {
      width: 85%;
   }


   .tl-step {
      display: flex;
      flex-direction: column;
      align-items: center;
      position: relative;
   }

   .tl-step span {
      margin-top: 8px;
      font-size: 14px;
      color: #fff;
      text-align: center;
      display: block;
      white-space: nowrap;
   }

   .tl-dot {
      width: 14px;
      height: 14px;
      background: #fff;
      border-radius: 50%;
      position: relative;
   }

   .tl-step.active .tl-dot {
      border: 1px solid #fff;
      background: #fff;
   }

   .tl-step .tl-dot {
      border: 1px solid #fff;
      background: #0047FF;
   }

   .card-container {
      display: flex;
      flex-wrap: wrap;
      margin-top: 1rem;
      width: 100%;
      gap: 1.5rem;
   }

   .app-card {
      width: 265px;
      background: white;
      border-radius: 0.75rem;
      padding: 1rem;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      position: relative;
      transition: box-shadow 0.2s;
      text-decoration: none;
      box-shadow: 0px 0px 15px 0px #00000012;

   }

   .app-card:hover {
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
   }

   .card-header {
      position: absolute;
      top: 0.75rem;
      left: 0.75rem;
      right: 0.75rem;
      display: flex;
      justify-content: space-between;
      font-size: 1rem;
      color: #2563eb;
   }

   .drag-icon {
      cursor: grab;
   }



   .card-body {
      display: flex;
      flex-direction: column;
      align-items: center;
      margin-top: 2.5rem;
      margin-bottom: 1rem;
   }

   .card-icon {
      width: 40px;
      height: 40px;
      color: #2563eb;
   }

   .card-title {
      margin-top: 0.5rem;
      font-weight: 400;
      color: #141340;
      text-align: center;
      font-size: 20px;
   }

   .card-actions {
      display: flex;
      justify-content: space-between;
      gap: 0.5rem;
      width: 100%;
   }

   .edit-btn,
   .delete-btn {
      padding: 0.5rem 0.5rem;
      border-radius: 0.375rem;
      font-size: 0.875rem;
      font-weight: 400;
      border: 1px solid transparent;
      cursor: pointer;
      display: flex;
      gap: 0.5rem;
      width: 49%;
      justify-content: center;
   }

   .edit-btn {
      background-color: white;
      border: 1px solid #cbd5e1;
      color: #585C7B;
   }

   .edit-btn:hover {
      background-color: #f9fafb;
   }

   .delete-btn {
      background-color: #EA4335;
      color: white;
   }

   .delete-btn:hover {
      background-color: #dc2626;
   }

   .modal-overlay {
      position: fixed;
      inset: 0;
      background-color: rgba(0, 0, 0, 0.4);
      display: flex;
      justify-content: center;
      align-items: center;
      z-index: 1000;
   }

   .modal-content {
      background-color: white;
      padding: 2rem;
      border-radius: 1rem;
      width: 542px;
      box-shadow: 0 10px 40px rgba(0, 0, 0, 0.2);
      display: flex;
      flex-direction: column;
      gap: 1rem;
      text-align: left;
   }

   .modal-actions {
      display: flex;
      justify-content: flex-end;
      gap: 0.75rem;
   }

   .modal-title {
      font-weight: 700;
      color: #141340;
      font-size: 20px;
   }

   .outline-btn {
      padding: 0.5rem 1rem;
      border: 1px solid #585C7B;
      border-radius: 0.375rem;
      background-color: white;
      color: #585C7B;
      font-weight: 500;
      cursor: pointer;
   }

   .outline-btn:hover {
      background-color: #f9fafb;
   }

   .card-type-btn-container {
      display: flex;
      align-items: center;
      gap: 24px;
      width: 100%;
   }

   .card-type-btn {
      color: #585C7B;
      font-size: 16px;
      font-weight: 400;
      background-color: #EAECF0;
      border-radius: 8px;
      padding: 14px 12px;
      border: none;
      width: 48%;
   }
</style>