@page "/details/splash"
@inject IJSRuntime JS
@using Microsoft.AspNetCore.Components.Forms

<div class="breadcrumb">
   <a href="/">Bank Of America</a> <img src="icons/CaretRight.svg" alt="" />
   <a href="/details">Details</a> <img src="icons/CaretRight.svg" alt="" />
   <span>Splash & Theme</span>
</div>

<div class="splash-container">
   <div class="editor-panel">
      <h2 class="page-heading">Splash Screen</h2>

      <h4 class="page-subtitle">Add Bank Logo</h4>

      <InputFile style="display: none;" id="fileInput" OnChange="@HandleFileChange" accept=".svg,.png,.jpg,.jpeg" />

      <div class="custom-file-upload" @onclick="TriggerFileInput">
         <img src="icons/UploadIcon.svg" alt="">
         <span>
            Choose a file to upload
         </span>
      </div>

      <label>Select Background Color</label>
      <input type="range" min="0" max="360" @bind="Hue" class="color-range" />


      <div class="color-code-container">
         <label class="color-code-text">Opacity</label>
         <input type="number" min="0" max="100" @bind="Opacity" class="color-code-input" />
      </div>

      <div class="color-code-container">
         <label class="color-code-text">Color Code</label>
         <input type="text" readonly value="@BackgroundColor" class="color-code-input" />
      </div>
   </div>

   <div class="preview-container">
      <h3 class="preview-heading">Preview</h3>
      <div class="preview-panel">
         <div class="splash-preview" style="background-color:@BackgroundColorWithOpacity">
            @if (!string.IsNullOrEmpty(ImageDataUrl))
            {
               <img src="@ImageDataUrl" class="logo" />
            }
         </div>
      </div>
   </div>
</div>
<div class="action-buttons">
   <button class="secondary-button">Back</button>
   <a href="/details/theme" class="primary-btn">Next</a>
</div>

@code {

   private int Hue { get; set; } = 240;

   private string BackgroundColor => HslToHex(Hue, 100, 50);
   private int Opacity { get; set; } = 100;

   private string BackgroundColorWithOpacity =>
   $"{BackgroundColor}{Convert.ToString((int)(Opacity / 100.0 * 255), 16).PadLeft(2, '0')}";

   private string HslToHex(int h, int s, int l)
   {
      double C = (1 - Math.Abs(2 * l / 100.0 - 1)) * (s / 100.0);
      double X = C * (1 - Math.Abs(h / 60.0 % 2 - 1));
      double m = l / 100.0 - C / 2;
      double r = 0, g = 0, b = 0;

      if (h < 60) { r = C; g = X; }
      else if (h < 120) { r = X; g = C; }
      else if (h < 180) { g = C; b = X; }
      else if (h < 240) { g = X; b = C; }
      else if (h < 300) { r = X; b = C; }
      else { r = C; b = X; }

      int R = (int)Math.Round((r + m) * 255);
      int G = (int)Math.Round((g + m) * 255);
      int B = (int)Math.Round((b + m) * 255);

      return $"#{R:X2}{G:X2}{B:X2}";
   }

   private string? ImageDataUrl;


   private async Task HandleFileChange(InputFileChangeEventArgs e)
   {
      var file = e.File;
      using var stream = file.OpenReadStream(maxAllowedSize: 1024 * 1024);
      var buffer = new byte[file.Size];
      await stream.ReadAsync(buffer);
      ImageDataUrl = $"data:{file.ContentType};base64,{Convert.ToBase64String(buffer)}";
   }

   private async Task TriggerFileInput()
   {
      await JS.InvokeVoidAsync("triggerInputClick", "fileInput");
   }
}

<style>
   .breadcrumb {
      font-size: 0.875rem;
      color: #1f2937;
      margin-bottom: 1rem;
   }

   .breadcrumb a {
      color: #6b7280;
      text-decoration: none;
      margin-right: 0.25rem;
      font-weight: 500;
   }

   .page-heading {
      color: #141340;
      font-size: 20px;
      font-weight: 700;
      margin: 0px;
   }

   .page-subtitle {
      color: #141340;
      font-size: 16px;
      font-weight: 400;
   }

   .custom-file-upload {
      padding: 22px 15px;
      background-color: #F8F8F8;
      border: 1px solid #EAECF0;
      color: #141340;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      flex-direction: column;
      border-radius: 8px;
      height: 149px;
   }

   .color-code-container {
      display: flex;
      align-items: center;
      gap: 24px;
   }

   .color-code-input {
      width: fit-content;
      border: 1px solid #EAECF0;
      border-radius: 4px;
      width: 86px;
      outline: none;
   }

   .color-code-text {
      font-size: 14px;
      font-weight: 400;
      color: #585C7B;
   }


   .splash-container {
      display: flex;
      gap: 20px;

      font-family: 'Segoe UI', sans-serif;
      background-color: #F4F7FF;
      border-radius: 32px;
      padding: 20px
   }

   .color-range {
      -webkit-appearance: none;
      width: 100%;
      height: 13px;
      border-radius: 8px;
      background: linear-gradient(to right,
            red, orange, yellow, green, cyan, blue, violet, red);
      outline: none;
   }

   .color-range::-webkit-slider-thumb {
      -webkit-appearance: none;
      appearance: none;
      width: 13px;
      height: 13px;
      border: 2px solid white;
      border-radius: 50%;
      background-color: transparent;
      cursor: pointer;
      box-shadow: 0 0 2px rgba(0, 0, 0, 0.4);
   }

   .color-range::-moz-range-thumb {
      width: 13px;
      height: 13px;
      border: 2px solid white;
      border-radius: 50%;
      background-color: transparent;
      cursor: pointer;
   }

   .editor-panel {
      flex: 1 1 auto;
      background: #fff;
      padding: 20px;
      border-radius: 10px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
      display: flex;
      flex-direction: column;
      gap: 15px;
   }

   .editor-panel input[type="file"],
   .editor-panel input[type="color"],
   .editor-panel input[type="range"],
   .editor-panel input[type="text"] {
      padding: 5px;
      font-size: 14px;
   }

   .preview-container {
      padding: 24px;
      background-color: #fff;
      border-radius: 16px;
   }

   .preview-heading {
      font-size: 20px;
      font-weight: 700;
      color: #141340;
      margin-bottom: 16px;
   }

   .preview-panel {
      flex: 1;
      display: flex;
      align-items: center;
      justify-content: center;
   }

   .splash-preview {
      width: 300px;
      height: 600px;
      border-radius: 20px;
      position: relative;
      box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
      display: flex;
      align-items: center;
      justify-content: center;
      flex-direction: column;
      overflow: hidden;
   }

   .splash-preview .logo {
      max-width: 100px;
      max-height: 100px;
      margin-bottom: 20px;
   }

   .splash-preview .title {
      font-size: 24px;
      font-weight: bold;
      color: white;
   }

   .action-buttons {
      display: flex;
      align-items: center;
      justify-content: end;
      gap: 16px;
      margin: 40px 0;
   }

   .primary-btn {
      padding: 0.5rem 1rem;
      background-color: #0047FF;
      color: white;
      border: none;
      border-radius: 0.375rem;
      font-weight: 500;
      cursor: pointer;
      text-decoration: none;
   }

   .primary-btn:hover {
      background-color: #003bd1;
   }

   .secondary-button {
      padding: 0.5rem 1rem;
      border-radius: 0.5rem;
      background-color: #EAECF0;
      color: #98A2B3;
      font-weight: 700;
      cursor: pointer;
      border: 0px;
   }
</style>